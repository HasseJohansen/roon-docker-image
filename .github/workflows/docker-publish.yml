name: Docker

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request:
  schedule:
    - cron:  '0 0 * * *'
env:
  IMAGE_NAME: roon

jobs:
  check_upstream_roon_vs_releases:
    runs-on: ubuntu-latest

    outputs:
      run_build: ${{ steps.compare_versions.outputs.RUN_BUILD }}
      ROON_RELEASE: ${{ steps.roon_release.outputs.ROON_RELEASE }}

    steps:
      - uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Check latest release on roon forum
        id: roon_release
        run: |
          ROON_RELEASE=$(curl -s https://community.roonlabs.com/t/roon-2-0-current-production-versions/213416 | awk '/<td>Linux \/ RoonOS<\/td>/{ getline; a = gensub(/<td><code>production ([0-9][0-9][0-9][0-9]).*/, "\\1", "g", $0); print a }')
          echo ROON_RELEASE=2.0.${ROON_RELEASE} >> $GITHUB_OUTPUT

      - name: Get latest release on github
        id: github_release
        run: |
          echo "GITHUB_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare_versions
        if: ${{ steps.github_release.outputs.GITHUB_TAG == steps.roon_release.outputs.ROON_RELEASE }}
        run: |
          echo "RUN_BUILD=false" >> $GITHUB_OUTPUT

  docker:
    if: needs.check_upstream_roon_vs_releases.outputs.RUN_BUILD != 'false'
    needs: check_upstream_roon_vs_releases
    runs-on: ubuntu-latest
    outputs:
      RELEASE: ${{ needs.check_upstream_roon_vs_releases.outputs.ROON_RELEASE }}

    steps:
      - uses: actions/checkout@v5.0.0
       
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
        with:
          endpoint: builders
     
      - name: Login to DockerHub
        uses: docker/login-action@v3.5.0
        with:
          username: hassejohansen
          password: ${{ secrets.DOCKER_HUB_PAT }}
    
      - name: Login to ghcr.io
        uses: docker/login-action@v3 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Prep Docker Tags
        id: docker_meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: "docker.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}, ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
          tags: |
            type=raw,value=${{ needs.check_upstream_roon_vs_releases.outputs.ROON_RELEASE }}
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=edge
            type=sha,prefix=git-
            
   
      - name: Build and push Docker images
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
  create-release:
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5.0.0
    - uses: ncipollo/release-action@v1.20.0
      with:
        allowUpdates: true
        bodyFile: "release.md"
        tag: ${{ needs.docker.outputs.RELEASE }}
        token: ${{ secrets.GITHUB_TOKEN }}
